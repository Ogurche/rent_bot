# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—è

import re
from aiogram import types, Dispatcher 
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext, filters
from handler.make_order import start_cr_order 


from keybord.rentier_keybord import * 
from sys_files.bot_creation import dp, bot
from database.bd import sql_check , sql_insert_rentie_profile
from handler.pass_house import new_rent_h , change_profile 
from handler.change_pass_house import my_rents
import database.bd as bd


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è

class Rentier (StatesGroup):
    name = State()
    telephone_number = State()
    its_rentier = State() #True & False


#@dp.message_handler (commands=['start'])
async def start_cmd (message: types.Message):
    keybord = await menu_keybord()
    await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ø–æ–∏—Å–∫—É –∫–≤–∞—Ä—Ç–∏—Ä –≤ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–µü§ñüá∫üáø. –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º –ø–∏—à–∏—Ç–µ @flat_rent_admin', reply_markup= keybord)


#@dp.message_handler(filters.Text (equals='–°–¥–∞—Ç—å'))
async def rentier_profile_check (message: types.Message):
    try:
        check_id = (await sql_check(field = 'id_member', field_2 =',name', table='rentie', value = message.chat.id))
        flag = True 
        for check in check_id:
            if check[0]==message.chat.id:
                await message.answer(f'{check[1]}, —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?', reply_markup = await create_change_show_keybord())
                flag = False
        if flag:
            await message.answer('–ú—ã –µ—â–µ –Ω–µ –∑–Ω–∞–∫–æ–º—ã. –î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å')
            await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è', reply_markup= ReplyKeyboardRemove())
            await Rentier.name.set()
    except:
        await message.answer('–ú—ã –µ—â–µ –Ω–µ –∑–Ω–∞–∫–æ–º—ã. –î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å')
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è', reply_markup= ReplyKeyboardRemove())
        await Rentier.name.set()


# @dp.message_handler (commands=['order'],state ="*")
# @dp.message_handler(filters.Text (equals='–°–Ω—è—Ç—å'))
async def take_house (message: types.Message, state: FSMContext):
    await state.finish()
    await start_cr_order (message)


# –û–¢–ú–ï–ù–ê - –≤—ã—Ö–æ–¥ –≤ —Å–∞–º–æ–µ –Ω–∞—á–∞–ª–æ 
# start/ menu - –≤—ã—Ö–æ–¥ –≤ —Å–∞–º–æ–µ –Ω–∞—á–∞–ª–æ 
# –ù–∞–∑–∞–¥  


#@dp.message_handler(filters.Text(equals="–û—Ç–º–µ–Ω–∞", ignore_case= True), state='*')
async def cancel_buttom(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup= await menu_keybord())
    await start_cmd(message)


#@dp.message_handler(commands=[rent], state='*')
async def rent_buttom (message: types.Message, state:FSMContext):
    await state.finish()
    answer = await message.reply('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é —Å–¥–∞—á–∏ –∂–∏–ª—å—è!')
    await bot.delete_message(message.chat.id, message.message_id)
    await bot.delete_message(answer.chat.id, answer.message_id)
    await rentier_profile_check (message)


# @dp.message_handler (filters.Text (equals='–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
# @dp.message_handler (commands=['menu'], state='*')
async def back_to_menu (message: types.Message, state: FSMContext):
    await state.finish()
    answer = await message.reply('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup= await menu_keybord())
    await bot.delete_message(message.chat.id, message.message_id)
    await bot.delete_message(answer.chat.id, answer.message_id)
    await start_cmd(message)
    

# @dp.message_handler(lambda messsage : messsage.text in ['–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ', '–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å', '–ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è'])
async def new_rent(message:types.Message):
    # —Å–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥ 
    if message.text == '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ':
        await new_rent_h(message)
    elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å':
        await change_profile(message)
    elif message.text == '–ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è':
        await my_rents(message)


# @dp.message_handler(state=Rentier.name)
async def rentier_name (message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data ['rentier_name'] = message.text
        data ['rentier_id'] = message.chat.id
    await message.answer('–û—Ç–ª–∏—á–Ω–æ, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
    await Rentier.telephone_number.set()


# @dp.message_handler(state=Rentier.telephone_number)
async def rentier_telephone_number (message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data ['rentier_telephone_number'] = message.text
        data ['telegram_profile'] = '@' + str(message.from_user.username)
    inline_rentier_keybord = await rentier_yes_no_keybord()
    await message.answer('–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å, –í—ã —Ä–∏—ç–ª—Ç–æ—Ä?\n(–í–Ω–∏–º–∞–Ω–∏–µ, –Ω–µ —Ä–∏—ç–ª—Ç–æ—Ä –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 1 –æ–±—ä—è–≤–ª–µ–Ω–∏—è)',reply_markup = inline_rentier_keybord)
    await Rentier.its_rentier.set()


# @dp.callback_query_handler(state=Rentier.its_rentier)
async def rentier_yes_no (callback_query: types.CallbackQuery, state: FSMContext):
    try:
        async with state.proxy() as data:
            data ['its_rentier'] = callback_query.data
        await bot.send_message(callback_query.from_user.id, '–°–ø–∞—Å–∏–±–æ, –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω')
        await sql_insert_rentie_profile (state=state)
        await state.finish()
        await bot.delete_message(callback_query.from_user.id, callback_query.message.message_id)
        await rentier_profile_check (callback_query.message)
    except Exception as e:
        print(e)
        await bot.send_message(callback_query.from_user.id, '–û—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.finish()
        await bot.delete_message(callback_query.from_user.id, callback_query.message.message_id)
        await rentier_profile_check (callback_query.message)


def registr_handlers(dp:Dispatcher):
    dp.register_message_handler(start_cmd, commands=['start'])
    dp.register_message_handler(rentier_profile_check, filters.Text (equals='–°–¥–∞—Ç—å'))
    dp.register_message_handler(take_house, commands=['order'], state='*')
    dp.register_message_handler (take_house, filters.Text (equals='–°–Ω—è—Ç—å'), state='*')
    dp.register_message_handler(cancel_buttom, filters.Text(equals="–û—Ç–º–µ–Ω–∞", ignore_case= True), state='*')
    dp.register_message_handler(rent_buttom, commands=['rent'], state='*')
    dp.register_message_handler(back_to_menu, filters.Text (equals='–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
    dp.register_message_handler(back_to_menu, commands=['menu'], state='*')
    dp.register_message_handler(new_rent, lambda messsage : messsage.text in ['–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ', '–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å', '–ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è'])
    dp.register_message_handler(rentier_name, state=Rentier.name)
    dp.register_message_handler(rentier_telephone_number, state=Rentier.telephone_number)
    dp.register_callback_query_handler(rentier_yes_no, state=Rentier.its_rentier)
